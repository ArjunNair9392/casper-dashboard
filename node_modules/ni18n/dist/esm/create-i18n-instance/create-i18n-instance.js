var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { initReactI18next } from 'react-i18next';
import i18n from 'i18next';
import useBackend from '../use-backend';
import { getBackendConfig } from './get-backend-config';
export var createI18nInstance = function (options, plugins) {
    var _a, _b, _c;
    var config = __assign(__assign(__assign({}, options), getBackendConfig(options)), { partialBundledLanguages: (_a = options.partialBundledLanguages) !== null && _a !== void 0 ? _a : true, react: __assign(__assign({}, options.react), { useSuspense: (_c = (_b = options.react) === null || _b === void 0 ? void 0 : _b.useSuspense) !== null && _c !== void 0 ? _c : false }) });
    var instance = i18n.createInstance(config);
    instance.use(initReactI18next);
    useBackend(instance);
    if (Array.isArray(plugins)) {
        plugins.flat().forEach(function (plugin) { return instance.use(plugin); });
    }
    var init = instance.init(config);
    return {
        instance: instance,
        init: init,
    };
};
